{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters":
  {

    "sqlAdminLogin":
    {
      "type": "string"
    },
    "sqlAdminPassword":
    {
      "type": "securestring"
    },
    "aadUserUPN":
    {
      "type": "string"
    },
    "aadUserObjectID":
    {
      "type": "string"
    },
    "clientId":
    {
      "type": "string"
    },
    "aadInstance":
    {

      "type": "string",
      "defaultValue": "https://login.microsoftonline.com"
    },
    "tenant":
    {
      "type": "string"

    }
  },
  "variables":
  {
    "hostingPlanName": "[concat('plan', uniqueString(resourceGroup().id))]",
    "skuName": "F1",
    "skuCapacity": "1",
    "webSiteName": "[concat('webSite', uniqueString(resourceGroup().id))]",
    "apiSiteName": "[concat('apiSite', uniqueString(resourceGroup().id))]",

    "sqlserverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
    "collation": "SQL_Latin1_General_CP1_CI_AS",
    "edition": "Basic",
    "maxSizeBytes": "1073741824",
    "requestedServiceObjectiveName": "Basic",
    "databaseName": "advWorks",

    "storageName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "storageType": "Standard_LRS",
    "vaultName": "[concat('keyvault', uniqueString(resourceGroup().id))]",
    "tenantId": "[subscription().tenantId]"
  },
  "resources":
  [
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku":
      {
        "name": "[variables('storageType')]"
      },
      "dependsOn":
      [
      ],
      "tags":
      {
        "displayName": "Storage"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('vaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "properties":
      {
        "tenantId": "[variables('tenantId')]",
        "sku":
        {
          "family": "A",
          "name": "standard"
        },
        "enabledForDeployment": "true",
        "enabledForTemplateDeployment": "true",
        "accessPolicies":
        [

        ]
      },
      "tags":
      {
        "displayName": "KeyVault"
      }
    },
    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags":
      {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01-preview",
      "properties":
      {
        "administratorLogin": "[parameters('sqlAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]"
      },
      "resources":
      [
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags":
          {
            "displayName": "Database"
          },
          "apiVersion": "2014-04-01-preview",
          "dependsOn":
          [
            "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ],
          "properties":
          {
            "edition": "[variables('edition')]",
            "collation": "[variables('collation')]",
            "maxSizeBytes": "[variables('maxSizeBytes')]",
            "requestedServiceObjectiveName": "[variables('requestedServiceObjectiveName')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn":
          [
            "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties":
          {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        },
        {
          "type": "administrators",
          "name": "activeDirectory",
          "apiVersion": "2014-04-01-preview",
          "location": "[resourceGroup().location]",
          "properties":
          {
            "administratorType": "ActiveDirectory",
            "login": "[parameters('aadUserUPN')]",
            "sid": "[parameters('aadUserObjectID')]",
            "tenantId": "[variables('tenantId')]"
          },
          "dependsOn":
          [
            "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags":
      {
        "displayName": "HostingPlan"
      },
      "sku":
      {
        "name": "[variables('skuName')]",
        "capacity": "[variables('skuCapacity')]"
      },
      "properties":
      {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "identity":
      {
        "type": "SystemAssigned"
      },
      "dependsOn":
      [
        "[resourceId('Microsoft.Web/serverFarms/', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts',variables('storageName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/',variables('vaultName'))]"
      ],
      "tags":
      {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty",
        "displayName": "Website"
      },
      "properties":
      {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources":
      [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn":
          [
            "[resourceId('Microsoft.Web/Sites/', variables('webSiteName'))]"
          ],
          "properties":
          {
            "DefaultConnection":
            {
              "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlAdminLogin'), '@', variables('sqlserverName'), ';Password=', parameters('sqlAdminPassword'), ';')]",
              "type": "SQLServer"
            },
            "DemoDB":
            {
              "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'))]",
              "type": "SQLServer"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn":
          [
            "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
          ],
          "tags":
          {
            "displayName": "appSettings"
          },
          "properties":
          {
            "ida:ClientId": "[parameters('clientId')]",
            "ida:AADInstance": "[parameters('aadInstance')]",
            "ida:Domain": "[parameters('tenant')]",
            "ida:TenantId": "[variables('tenantId')]",
            "ida:ReplyUrl": "[concat('https://',reference(concat('Microsoft.Web/sites/', variables('webSiteName')),'2015-08-01').hostNames[0],'/')]",
            "ida:PostLogoutRedirectUri": "[concat('https://',reference(concat('Microsoft.Web/sites/', variables('webSiteName')),'2015-08-01').hostNames[0],'/')]",
            "StorageAccountUrl": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageName')), '2016-01-01').primaryEndpoints.blob]",
            "KeyVaultUrl": "[reference(concat('Microsoft.KeyVault/vaults/',variables('vaultName')),'2018-02-14').vaultUri]",
            "PROJECT": "aad-dotnet-multipleapis\\aad-dotnet-multiple-apis.csproj"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn":
          [

            "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
            "[resourceId('Microsoft.Web/Sites/config', variables('webSiteName'),'appsettings')]",
            "[resourceId('Microsoft.Web/Sites/config', variables('webSiteName'),'connectionstrings')]"

          ],
          "properties":
          {
            "RepoUrl": "https://github.com/kaevans/aad-dotnet-multiple-apis.git",
            "branch": "master",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('apiSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "identity":
      {
        "type": "SystemAssigned"
      },
      "dependsOn":
      [
        "[resourceId('Microsoft.Web/serverFarms/', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts',variables('storageName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/',variables('vaultName'))]"
      ],
      "tags":
      {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty",
        "displayName": "ApiSite"
      },
      "properties":
      {
        "name": "[variables('apiSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources":
      [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn":
          [
            "[resourceId('Microsoft.Web/Sites/', variables('apiSiteName'))]"
          ],
          "properties":
          {
            "DefaultConnection":
            {
              "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlAdminLogin'), '@', variables('sqlserverName'), ';Password=', parameters('sqlAdminPassword'), ';')]",
              "type": "SQLServer"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn":
          [
            "[resourceId('Microsoft.Web/sites', variables('apiSiteName'))]"
          ],
          "tags":
          {
            "displayName": "appSettings"
          },
          "properties":
          {
            "ida:Tenant": "[parameters('tenant')]",
            "ida:Audience": "[concat('https://',parameters('tenant'), '/aad-dotnet-webapi-onbehalfof')]",
            "ida:ClientId": "[parameters('clientId')]",
            "ida:AADInstance": "[parameters('aadInstance')]",
            "KeyVaultUrl": "[reference(concat('Microsoft.KeyVault/vaults/',variables('vaultName')),'2018-02-14').vaultUri]",
            "PROJECT": "aad-dotnet-multipleapis\\aad-dotnet-webapi-onbehalfof.csproj"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn":
          [

            "[resourceId('Microsoft.Web/Sites', variables('apiSiteName'))]",
            "[resourceId('Microsoft.Web/Sites/config', variables('apiSiteName'),'appsettings')]",
            "[resourceId('Microsoft.Web/Sites/config', variables('apiSiteName'),'connectionstrings')]"
          ],
          "properties":
          {
            "RepoUrl": "https://github.com/kaevans/aad-dotnet-multiple-apis.git",
            "branch": "master",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {

      "name": "[concat(variables('vaultName'), '/add')]",
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2018-02-14",
      "dependsOn":
      [
        "[concat('Microsoft.KeyVault/vaults/', variables('vaultName'))]",
        "[concat('Microsoft.Web/sites/',variables('webSiteName'))]",
        "[concat('Microsoft.Web/sites/',variables('apiSiteName'))]"
      ],
      "properties":
      {
        "accessPolicies":
        [
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[reference(variables('webSiteName'),'2018-02-01','Full').identity.principalId]",
            "permissions":
            {
              "secrets":
              [
                "get"
              ]
            }
          },
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[reference(variables('apiSiteName'),'2018-02-01','Full').identity.principalId]",
            "permissions":
            {
              "secrets":
              [
                "get"
              ]
            }
          },
          {
            "objectId": "[parameters('aadUserObjectID')]",
            "tenantId": "[variables('tenantId')]",
            "permissions":
            {
              "keys":
              [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets":
              [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates":
              [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          }
        ]
      }
    }
  ],
  "outputs":
  {
    "appUrl":
    {
      "type": "string",
      "value": "[concat('https://',reference(concat('Microsoft.Web/sites/', variables('webSiteName')),'2015-08-01').hostNames[0],'/')]"
    },
    "apiAppUrl":
    {
      "type": "string",
      "value": "[concat('https://',reference(concat('Microsoft.Web/sites/', variables('apiSiteName')),'2015-08-01').hostNames[0],'/')]"
    },
    "blobUrl":
    {

      "type": "string",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageName')), '2016-01-01').primaryEndpoints.blob]"
    },
    "vaultUrl":
    {
      "type": "string",
      "value": "[reference(concat('Microsoft.KeyVault/vaults/',variables('vaultName')),'2018-02-14').vaultUri]"
    }
  }
}